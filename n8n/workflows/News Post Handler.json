{
  "name": "News Post Handler",
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "source",
              "type": "object"
            },
            {
              "name": "post",
              "type": "object"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -240,
        0
      ],
      "id": "a37219e7-af96-4717-97e0-7bc44eb567e1",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "jsCode": "const json = $('When Executed by Another Workflow').first().json;\nconsole.log(json);\n// Content Relevance Filter with Arabic Text Normalization\nconst title = json.post.title || \"\";\n\n// Normalize Arabic text to handle different forms of the same letters\nfunction normalizeArabic(text) {\n  return text\n    .replace(/[أإآ]/g, \"ا\") // Normalize alef variations\n    .replace(/[ة]/g, \"ه\") // Normalize ta marbuta\n    .replace(/[ي]/g, \"ي\") // Normalize ya variations\n    .replace(/[ؤ]/g, \"و\") // Normalize waw with hamza\n    .replace(/[ئ]/g, \"ي\") // Normalize ya with hamza\n    .replace(/[ء]/g, \"\") // Remove hamza\n    .replace(/\\s+/g, \" \") // Normalize spaces\n    .trim()\n    .toLowerCase();\n}\n\n// Normalize the input text\nconst normalizedTitle = normalizeArabic(title);\n\n// Keywords that indicate rice/barley price content (normalized)\nconst relevantKeywords = [\n  \"اسعار\",\n  \"ارز\",\n  \"شعير\",\n  \"اسعار اليوم\",\n  \"اسعار الارز\",\n  \"اسعار الشعير\",\n  \"اسعار الارز اليوم\",\n  \"اسعار الشعير اليوم\",\n  \"سعر الارز\",\n  \"سعر الشعير\",\n  \"اسعار الحبوب\",\n  \"اسعار المحاصيل\",\n  \"اسعار الارز الابيض\",\n  \"اسعار الشعير العريض\",\n  \"اسعار الشعير الرفيع\",\n  \"اسعار الارز الابيض العريض\",\n  \"اسعار الارز الابيض الرفيع\",\n  \"اسعار الشعير العريض\",\n  \"اسعار الشعير الرفيع\",\n  \"اسعار اليوم\",\n  \"اسعار السوق\",\n  \"اسعار الحبوب اليوم\",\n];\n\n// Get matched keywords in single pass\nconst matchedKeywords = relevantKeywords.filter(\n  (keyword) =>\n    normalizedTitle.includes(keyword)\n);\n\n// Calculate relevance score and determine if relevant\nconst relevanceScore = Math.min(100, matchedKeywords.length * 20);\nconst isRelevant = relevanceScore > 0;\n\n// Add relevance analysis as a structured object\njson.relevance = {\n  isRelevant: isRelevant,\n  relevanceScore: relevanceScore,\n  matchedKeywords: matchedKeywords,\n  originalTitle: title,\n  normalizedTitle: normalizedTitle,\n  totalKeywordsChecked: relevantKeywords.length,\n  matchedKeywordsCount: matchedKeywords.length,\n};\n\nreturn json;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        416,
        -128
      ],
      "id": "0a3cf263-1f24-4c69-8ed2-5873696b990b",
      "name": "Calculate Relevance"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7d947ddb-ea5f-444f-b75c-f82bfd73f271",
              "leftValue": "={{ $json.relevance.isRelevant }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        624,
        -128
      ],
      "id": "49a303c2-6547-4997-8740-fe3fb56f0cd2",
      "name": "Check Relevance"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "WuXViPjpfbejoAQ2",
          "mode": "list",
          "cachedResultName": "Extract Prices"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "text": "={{ $json.text }}"
          },
          "matchingColumns": [
            "text"
          ],
          "schema": [
            {
              "id": "text",
              "displayName": "text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        1824,
        -384
      ],
      "id": "2783cf15-9a01-47bd-ae72-be49b3d80379",
      "name": "Extract Prices"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2704,
        -400
      ],
      "id": "9fa6ca61-b784-4d1c-82a6-18b3923e0d14",
      "name": "Wait",
      "webhookId": "029d3b57-4aa9-424f-acf4-a2b2495073f2"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "IGreB8Q59lfgy9WR",
          "mode": "list",
          "cachedResultName": "Send results to slack"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "text": "={{ $json.text }}",
            "results": "={{ $json.results }}",
            "video": "={{ $json.video }}",
            "source": "={{ $json.source }}",
            "post": "={{ $json.post }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "results",
              "displayName": "results",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "array"
            },
            {
              "id": "source",
              "displayName": "source",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "object",
              "removed": false
            },
            {
              "id": "video",
              "displayName": "video",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "object",
              "removed": false
            },
            {
              "id": "post",
              "displayName": "post",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "object",
              "removed": false
            },
            {
              "id": "text",
              "displayName": "text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        2496,
        -400
      ],
      "id": "94f5b0ad-9626-49ff-8b67-01e527b32ee6",
      "name": "Send results to slack"
    },
    {
      "parameters": {
        "jsCode": "const text = $('Merge text').first().json.text;\nconst results = $input.first().json.data;\nconst data = $('When Executed by Another Workflow').first().json;\n\nreturn {\n  \"results\": results,\n  \"source\": data.source,\n  \"video\": null,\n  \"post\": data.post,\n  \"text\": text,\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2272,
        -400
      ],
      "id": "03f568b7-dea4-4119-83b1-8e974dd8c341",
      "name": "Set slack data"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f5cdfd21-db0f-4302-b0f0-cc9907fb8943",
              "leftValue": "={{ $json.has_prices }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2032,
        -384
      ],
      "id": "8baa4745-92e9-4800-abb3-ac4a3b34a279",
      "name": "If"
    },
    {
      "parameters": {
        "url": "={{ $json.post.url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1168,
        -528
      ],
      "id": "af50265c-c8ff-41ee-8d0a-b2b9987b177a",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8278becc-21a3-4bef-a9ae-a7f9111e4385",
              "leftValue": "={{ $json._id }}",
              "rightValue": 0,
              "operator": {
                "type": "object",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        144,
        0
      ],
      "id": "5be0b443-6eb7-4eb8-9780-ca834352bbf6",
      "name": "Check source is valid"
    },
    {
      "parameters": {
        "collection": "processed_sources",
        "options": {},
        "query": "={\n  \"source_id\": \"{{ $json.source.source_id }}\",\n  \"post_url\": \"{{ $json.post.url }}\"\n}"
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.2,
      "position": [
        -48,
        0
      ],
      "id": "550be7c5-eeb6-4b94-bd36-c28877f5124f",
      "name": "Find source in processed sources1",
      "alwaysOutputData": true,
      "credentials": {
        "mongoDb": {
          "id": "atuQlsTpZSEKAHMP",
          "name": "MongoDB account"
        }
      }
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "extractionValues": {
          "values": [
            {
              "key": "text",
              "cssSelector": ".content-inner h2,  .content-inner p,  .content-inner li",
              "returnArray": true
            }
          ]
        },
        "options": {
          "cleanUpText": true
        }
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        1360,
        -528
      ],
      "id": "b30085d7-a5f9-413b-83cb-fb0346b2341a",
      "name": "HTML",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.source.source_id }}",
                    "rightValue": "=almolakhasalektesady_news",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "5e43bf0b-2bee-42e7-9cd7-4cdf0355a5bf"
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        960,
        -416
      ],
      "id": "eddd7563-7787-448b-925b-1122bceeadd7",
      "name": "Switch"
    },
    {
      "parameters": {
        "jsCode": "const text = $input.first().json.text.join();\nreturn {\n  \"text\": text\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1600,
        -528
      ],
      "id": "0b2a57f6-534d-4183-82d4-7bde17d9f6fc",
      "name": "Merge text"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "l3Ot7Z5JeVUM2j1R",
          "mode": "list",
          "cachedResultName": "Insert Processed Source"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "source_id": "={{ $json.source_id }}",
            "video_id": "=",
            "publish_date": "={{ $json.publish_date }}",
            "processing_date": "={{ $json.processing_date }}",
            "status": "={{ $json.status }}",
            "post_url": "={{ $json.post_url }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "source_id",
              "displayName": "source_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "video_id",
              "displayName": "video_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "post_url",
              "displayName": "post_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "publish_date",
              "displayName": "publish_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "processing_date",
              "displayName": "processing_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        1200,
        16
      ],
      "id": "20d2f8a6-625d-4ec1-97ce-6c58fd0eea7b",
      "name": "Insert Rejected Video Source"
    },
    {
      "parameters": {
        "jsCode": "const json = $('When Executed by Another Workflow').first().json;\nreturn [\n  {\n    source_id: json.source.source_id,\n    post_url: json.post.url,\n    publish_date: json.post.publish_date,\n    processing_date: new Date().toISOString(),\n    status: 'rejected'\n  },\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        960,
        16
      ],
      "id": "8caef240-3d86-4770-b5b4-8d0d76c84329",
      "name": "Set rejected source data1"
    }
  ],
  "pinData": {
    "When Executed by Another Workflow": [
      {
        "json": {
          "source": {
            "_id": "68ddac7e37f50d8e384ce1ed",
            "source_id": "almolakhasalektesady_news",
            "name_ar": "موقع الملخص الاقتصادي",
            "name_en": "Almolakhas Alektesady News",
            "type": "news",
            "url": "https://almolakhasalektesady.com",
            "options": {
              "query_params": {
                "s": "أرز"
              }
            }
          },
          "post": {
            "url": "https://almolakhasalektesady.com/%D9%84%D9%84%D9%8A%D9%88%D9%85-%D8%A7%D9%84%D8%B1%D8%A7%D8%A8%D8%B9-%D8%B9%D9%84%D9%89-%D8%A7%D9%84%D8%AA%D9%88%D8%A7%D9%84%D9%8A-%D8%A7%D8%B1%D8%AA%D9%81%D8%A7%D8%B9-%D8%A3%D8%B3%D8%B9%D8%A7%D8%B1/",
            "title": "أسعار الأرز الشعير اليوم الأربعاء 24 سبتمبر 2025",
            "publish_date": "2025-09-24"
          }
        }
      }
    ]
  },
  "connections": {
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Find source in processed sources1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calculate Relevance": {
      "main": [
        [
          {
            "node": "Check Relevance",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Relevance": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set rejected source data1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Prices": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send results to slack": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set slack data": {
      "main": [
        [
          {
            "node": "Send results to slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Set slack data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set rejected source data1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find source in processed sources1": {
      "main": [
        [
          {
            "node": "Check source is valid",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check source is valid": {
      "main": [
        [
          {
            "node": "Calculate Relevance",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML": {
      "main": [
        [
          {
            "node": "Merge text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge text": {
      "main": [
        [
          {
            "node": "Extract Prices",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set rejected source data1": {
      "main": [
        [
          {
            "node": "Insert Rejected Video Source",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "625f45c3-7e45-467c-8264-cb68b1128e18",
  "meta": {
    "instanceId": "e0610107ac554f59b63883651795eb0400bfcc59bc18a9994fa27c06a3158c7b"
  },
  "id": "NmCRSDodT0Bh6Zva",
  "tags": []
}